name: Build, Push and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: absendo/docker-image:latest

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # SSL-Verzeichnis erstellen
            mkdir -p ~/ssl
            
            # Private Key formatieren
            echo "-----BEGIN PRIVATE KEY-----" > ~/ssl/privkey.pem
            echo "${{ secrets.SSL_PRIVATE_KEY }}" | tr -d '\n' | fold -w 64 >> ~/ssl/privkey.pem
            echo "-----END PRIVATE KEY-----" >> ~/ssl/privkey.pem
            
            # Erstes Zertifikat formatieren
            echo "-----BEGIN CERTIFICATE-----" > ~/ssl/fullchain.pem
            echo "${{ secrets.SSL_CERT_CHAIN }}" | tr -d '\n' | fold -w 64 >> ~/ssl/fullchain.pem
            echo "-----END CERTIFICATE-----" >> ~/ssl/fullchain.pem
            
            # Zweites Zertifikat anhÃ¤ngen
            echo "-----BEGIN CERTIFICATE-----" >> ~/ssl/fullchain.pem
            echo "${{ secrets.SSL_CERT_CHAIN1 }}" | tr -d '\n' | fold -w 64 >> ~/ssl/fullchain.pem
            echo "-----END CERTIFICATE-----" >> ~/ssl/fullchain.pem
            
            # Rechte setzen
            chmod 600 ~/ssl/privkey.pem
            chmod 600 ~/ssl/fullchain.pem
            
            # Container deployment
            docker pull absendo/docker-image:latest
            docker stop absendo-docker || true
            docker rm absendo-docker || true
            
            docker run -d --restart always --name absendo-docker -p 3001:3001 \
              -e SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
              -e SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} \
              -v ~/ssl:/app/ssl \
              absendo/docker-image:latest